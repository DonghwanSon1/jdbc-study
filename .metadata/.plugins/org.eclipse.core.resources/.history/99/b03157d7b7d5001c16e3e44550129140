package com.kh.controller;

import java.util.ArrayList;

import com.kh.model.service.RestaurantOrderService;
import com.kh.model.vo.RestaurantMenuList;
import com.kh.view.RestaurantOrderView;

// Controller : View를 통해서 요청 기능을 처리하는 담당
//				해당 메서드로 전달된 데이터를 가공처리 한 후 Dao메서드를 호출
// 				Dao로부터 반환받은 결과에 따라서 사용자가 보게될 View(응답화면)을 결정 (View 메서드 호출)

public class RestaurantOrderController {

//	public void insertMember(String userId, String userPwd, String userName, 
//							String gender, int age, String email, String phone, 
//							String address, String hobby) {
//	
//		// 1. 전달된 데이터들을 Member 객체에 담기 => 가공처리
//		Member m = new Member(userId, userPwd, userName, gender, age, email, phone, address, hobby);
//		
//		// 2. Service의 insertMember를 호출
//		int result = new MemberService().insertMember(m);
//		
//		// 3. 결과값에 따른 출력화면
//		if(result > 0) {
//			new MemberView().displaySuccess("성공적으로 회원 추가했습니다.");
//		} else {
//			new MemberView().displayFail("회원 추가를 실패했습니다..");
//		}
//		
//	}
	

	public void selectAll() {
		// SELECT -> Result -> ArrayList
		
		ArrayList<RestaurantMenuList> list = new RestaurantOrderService().selectAll();
		
		// 조회결과가 있는지 없는지 판단 후 사용자가 보게 될 View화면 지정
		if(list.isEmpty()) {
			new RestaurantOrderView().displayNodata("조회 실패했습니다.");
		} else {
			new RestaurantOrderView().displayList(list);
		}
		
	}
	

//	public void selectByUserId(String userId) {
//		Member m = new MemberService().selectByUserId(userId);
//		
//		if(m.getUserId() == null) {
//			new MemberView().displayFail(userId + "의 검색결과가 없습니다.");
//		} else {
//			new MemberView().displayOne(m);
//		}
//		
//	}
//	
	
	public void selectByMenuName(String keyword) {
		ArrayList<RestaurantMenuList> list = new RestaurantOrderService().selectByMenuName(keyword);
		
		if(list.isEmpty()) {
			new RestaurantOrderView().displayFail("조회 실패했습니다.");
		} else {
			new RestaurantOrderView().displayList(list);
		}
	}
		
	public void searchTaste(String taste) {
	        
	        int flag = new RestaurantOrderService().selectTaste(taste);
	        
	        if(flag == 0) {
	            new RestaurantOrderView().displayFail("해당 맛이 없어요~ 추가 예정입니다!");
	            return;
	        }
	        
	        
	        ArrayList<RestaurantMenuList> list = new ArrayList<>();
	        
	        list = new RestaurantOrderService().searchTaste(taste);
	        
	        if(list.isEmpty()) {
	            new RestaurantOrderView().displayFail("검색 실패!");
	        } else {
	            new RestaurantOrderView().displayList(list);
	        }
	        
	    }

	
	
	public void adminDeleteMenu(String menu) {
		
		int result = new RestaurantOrderService().adminDeleteMenu(menu);
		
		if(result > 0) {
			new RestaurantOrderView().displaySuccess("메뉴 삭제 성공했습니다.");
		} else {
			new RestaurantOrderView().displayFail("메뉴 삭제 실패했습니다.");
		}	
	}
	
	
	
	
	

}
