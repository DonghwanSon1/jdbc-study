package com.kh.model.dao;

import static com.kh.common.JDBCTemplate.close;

import java.lang.reflect.Member;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.kh.model.vo.RestaurantMenuList;


public class RestaurantOrderDao {
	

	
	public ArrayList<RestaurantMenuList> selectAll(Connection conn){
		

		ArrayList<RestaurantMenuList> list = new ArrayList<>();
		
	
		PreparedStatement pstmt = null; 
		ResultSet rset = null; 
		
		
		String sql = "SELECT * FROM MENULIST ORDER BY MENUNO ASC";
		
		try {
			
			pstmt = conn.prepareStatement(sql);
			rset = pstmt.executeQuery();
			
			while(rset.next()) {
				list.add(new RestaurantMenuList(
									rset.getString("MENUNO")
								   ,rset.getString("MENU")
								   ,rset.getInt("PRICE")
								   ,rset.getString("CATEGORY")
								   ,rset.getString("TASTE")));
				
			}
			
			
		} catch (SQLException e) {
			e.printStackTrace(); 
		} finally {
			close(rset);
			close(pstmt);
		}
		return list;
	}
	
	
	
//	public Member selectByUserId(Connection conn, String userId) {
//		
//		Member m = new Member();
//		
//		PreparedStatement pstmt = null;
//		ResultSet rset = null;
//		
//		String sql = "SELECT * FROM MEMBER WHERE USERID = ?";
//		
//		try {
//			pstmt = conn.prepareStatement(sql);
//			pstmt.setString(1, userId);
//			
//			rset = pstmt.executeQuery();
//			
//			if(rset.next()) {
//				m = new Member(rset.getInt("USERNO")
//							  ,rset.getString("USERID")
//							  ,rset.getString("USERPWD")
//							  ,rset.getString("USERNAME")
//							  ,rset.getString("GENDER")
//							  ,rset.getInt("AGE")
//							  ,rset.getString("EMAIL")
//							  ,rset.getString("PHONE")
//							  ,rset.getString("ADDRESS")
//							  ,rset.getString("HOBBY")
//							  ,rset.getDate("ENROLLDATE"));
//			}
//			
//			
//		} catch (SQLException e) {
//			e.printStackTrace();
//		} finally {
//			close(rset);
//			close(pstmt);
//		}
//		return m;
//	}
//	
//	
	
	public ArrayList<RestaurantMenuList> selectByMenuName(Connection conn, String keyword){
		ArrayList<RestaurantMenuList> list = new ArrayList<>();
		
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		String sql = "SELECT * FROM MENULIST WHERE MENU LIKE ?";
		
		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, "%" + keyword + "%");
			rset = pstmt.executeQuery();
			
			while(rset.next()) {
				list.add(new RestaurantMenuList(rset.getString("MENUNO")
												,rset.getString("MENU")
												,rset.getInt("PRICE")
												,rset.getString("CATEGORY")
												,rset.getString("TASTE")));
				
			}
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(rset);
			close(pstmt);
		}
		return list;
	}
	
	
public ArrayList<RestaurantMenuList> searchTaste(Connection conn, String taste){
        
        ArrayList<RestaurantMenuList> list = new ArrayList<>();
        
        PreparedStatement pstmt = null;
        ResultSet rset = null;
        
        String sql = "SELECT * FROM MENULIST WHERE TASTE = ?";
        
        try {
            pstmt = conn.prepareStatement(sql);
            
            pstmt.setString(1, taste);
            
            rset = pstmt.executeQuery();
            
            while(rset.next()) {
                list.add(new RestaurantMenuList(rset.getString("MENUNO")
                                               ,rset.getString("MENU")
                                               ,rset.getInt("PRICE")
                                               ,rset.getString("CATEGORY")
                                               ,rset.getString("TASTE")
                        ));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            close(rset);
            close(pstmt);
        }
        return list;
        
    }
    
    public int selectTaste(Connection conn, String taste) {
        
        int flag = 0;
        PreparedStatement pstmt = null;
        
        String sql = "SELECT * FROM MENULIST WHERE TASTE = ?";
        
        try {
            pstmt = conn.prepareStatement(sql);
            
            pstmt.setString(1, taste);
            
            flag = pstmt.executeQuery().next()? 1 : 0;
            
            
            
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            close(pstmt);
        }
        return flag;
        
    }
    
    
    
    
    
	public int adminDeleteMenu(Connection conn, String menu) {
		
		int result = 0;
		PreparedStatement pstmt = null;
		
		String sql = "DELETE FROM MENULIST WHERE MENU = ?";
		
		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, menu);
			
			result = pstmt.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(pstmt);
		}
		return result;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
